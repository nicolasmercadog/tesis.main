<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="styles.css" />
    <!-- Hoja de estilos externa -->
    <script src="jquery-lastest.min.js" type="text/javascript"></script>
    <!-- Librer√≠a jQuery -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Librer√≠a Chart.js para gr√°ficos -->
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom"></script>
    <!-- Plugin de zoom para Chart.js -->
    <script src="alarm.js" type="text/javascript"></script>
    <!-- Script para manejo de alarmas -->
    <script src="script.js" type="text/javascript"></script>
    <!-- Script principal de la aplicaci√≥n -->

    <script>
      // Funci√≥n para alternar la selecci√≥n de todos los canales
      function toggleAllChannels() {
        const state = !document.getElementById("channel0").checked; // Se obtiene el estado actual del primer canal
        for (let i = 0; i <= 12; i++) {
          // Itera sobre los canales del 0 al 12
          const checkbox = document.getElementById(`channel${i}`);
          if (checkbox) {
            checkbox.checked = state; // Cambia el estado del checkbox
          }
        }
      }

      // Funci√≥n para alternar entre play y pausa en el osciloscopio
      function togglePlayPause() {
        const button = document.getElementById("OScopeProbeButton"); // Obtiene el bot√≥n de play/pausa
        if (button.classList.contains("paused")) {
          // Si est√° en pausa, cambia a reproducci√≥n
          button.classList.remove("paused");
          button.classList.add("playing");
          button.value = "‚è∏"; // Cambia el √≠cono a pausa
          button.style.backgroundColor = "red"; // Cambia el color a rojo (indicando pausa)
        } else {
          // Si est√° en reproducci√≥n, cambia a pausa
          button.classList.remove("playing");
          button.classList.add("paused");
          button.value = "‚ñ∂"; // Cambia el √≠cono a play
          button.style.backgroundColor = "green"; // Cambia el color a verde (indicando reproducci√≥n)
        }
        ToggleOScopePause(); // Llama a la funci√≥n que gestiona el estado del osciloscopio
      }

      // Funci√≥n que cambia el estado de pausa del osciloscopio
      function ToggleOScopePause() {
        if (typeof pause_osc !== "undefined") {
          // Verifica si la variable global pause_osc est√° definida
          pause_osc = !pause_osc; // Invierte su estado
          console.log(
            `Oscilloscope is now ${pause_osc ? "paused" : "playing"}`
          );
        } else {
          console.error('Variable "pause_osc" no est√° definida.');
        }
      }

      // Funci√≥n para redimensionar los gr√°ficos cuando cambia el tama√±o de la ventana
      function resizeCanvases() {
        const ocanvas = document.getElementById("Osciloscopio"); // Obtiene el canvas del osciloscopio
        const fcanvas = document.getElementById("Armonicos"); // Obtiene el canvas de los arm√≥nicos

        if (ocanvas && fcanvas) {
          // Si los elementos existen, se asegura de que tengan un tama√±o m√≠nimo
          if (!ocanvas.style.height) ocanvas.style.height = "400px"; // Altura predeterminada del osciloscopio
          if (!fcanvas.style.height) fcanvas.style.height = "200px"; // Altura predeterminada del gr√°fico de arm√≥nicos
        }
      }

      // Llama a la funci√≥n de redimensionamiento cuando la p√°gina ha cargado completamente
      document.addEventListener("DOMContentLoaded", function () {
        resizeCanvases();
      });

      let oscilloscopeChart, fftChart; // Variables globales para los gr√°ficos

      // Funci√≥n para actualizar los gr√°ficos con nuevos datos
      function updateCharts(oscData, fftData) {
        if (oscilloscopeChart) {
          // Verifica si el gr√°fico del osciloscopio existe
          oscilloscopeChart.data.datasets = oscData; // Actualiza los datos del gr√°fico
          oscilloscopeChart.update(); // Redibuja el gr√°fico
        }
        if (fftChart) {
          // Verifica si el gr√°fico de FFT existe
          fftChart.data.datasets = fftData; // Actualiza los datos del gr√°fico
          fftChart.update(); // Redibuja el gr√°fico
        }
      }
    </script>
  </head>
  <body>
    <button-dark id="dark-mode-toggle" onclick="toggleDarkMode()">üåô</button-dark>

    <div id="cssmenu">
      <ul>
        <li><a href="index.htm">Principal</a></li>
        <li><a href="channel.htm">Configuraci√≥n de canales</a></li>
        <li><a href="group.htm">Configuraci√≥n de grupos</a></li>
        <li><a href="ioport.htm">Configuraci√≥n de puertos IO</a></li>
        <li><a href="live.htm">Vista en vivo</a></li>
        <li><a href="textmode.htm">S√≥lo texto</a></li>
        <li><a href="mqtt.htm">Configuraci√≥n de MQTT</a></li>
        <li><a href="wlan.htm">Configuraci√≥n de WLAN</a></li>
      </ul>
    </div>
    <center><h1>Vista en vivo</h1></center>
    <div id="OScope" class="collapsible">
      <table width="100%" border="0.1px" border-radius="5px">
        <tr>
          <td width="80%" >
            <canvas id="Osciloscopio"></canvas>
          </td>
          <td width="20%" >
            <canvas id="Armonicos"></canvas>
          </td>
        </tr>
      </table>

      <div style="margin-top: 10px">
        <input
          type="button"
          onclick="togglePlayPause();"
          id="OScopeProbeButton"
          class="paused"
          value="‚ñ∂"
          style="background-color: green"
        />
        <button
          onclick="charts['Osciloscopio'].resetZoom(); charts['Armonicos'].resetZoom();"
        >
          Restablecer Zoom
        </button>

        <button onclick="toggleAllChannels();">
          Activar/Desactivar todos los canales
        </button>
      </div>
      <br></br>
      <div id="fixedfooter">
        <table>
          <thead>
            <tr>
              <th>Grupo</th>
              <th>RMS (I)</th>
              <th>I3</th>
              <th>I5</th>
              <th>I7</th>
              <th>I9</th>
              <th>RMS (U)</th>
              <th>U3</th>
              <th>U5</th>
              <th>U7</th>
              <th>U9</th>
              <th>THD</th>
              <th>P</th>
              <th>Pvar</th>
              <th>Cos Œ¶</th>
            </tr>
          </thead>
          <tbody id="status-table-body">
            <!-- Fila del Estado General -->
            <tr>
              <td colspan="16">
                <b>Estado General:</b>
                <span id="general-status">Desconectado</span>
              </td>
            </tr>
            <!-- Aqu√≠ se generar√°n las filas din√°micamente -->
            <!-- Fila de Frecuencia -->
            <tr>
              <td colspan="16">
                <b>Frecuencia:</b> <span id="frequency">-- Hz</span>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <br></br>
      <div>
        <!-- Canales activos -->
        <input type="checkbox" id="channel0" checked /><label for="channel0"
          >L1 Corriente</label
        >
        <input type="checkbox" id="channel1" checked /><label for="channel1"
          >L1 Tensi√≥n</label
        >
        <input type="checkbox" id="channel2" checked /><label for="channel2"
          >L1 Potencia</label
        >
        <input type="checkbox" id="channel3" checked /><label for="channel3"
          >L1 Potencia Reactiva</label
        ><br />
        <input type="checkbox" id="channel4" checked /><label for="channel4"
          >L2 Corriente</label
        >
        <input type="checkbox" id="channel5" checked /><label for="channel5"
          >L2 Tensi√≥n</label
        >
        <input type="checkbox" id="channel6" checked /><label for="channel6"
          >L2 Potencia</label
        >
        <input type="checkbox" id="channel7" checked /><label for="channel7"
          >L2 Potencia Reactiva</label
        ><br />
        <input type="checkbox" id="channel8" checked /><label for="channel8"
          >L3 Corriente</label
        >
        <input type="checkbox" id="channel9" checked /><label for="channel9"
          >L3 Tensi√≥n</label
        >
        <input type="checkbox" id="channel10" checked /><label for="channel10"
          >L3 Potencia</label
        >
        <input type="checkbox" id="channel11" checked /><label for="channel11"
          >L3 Potencia Reactiva</label
        ><br />
        <input type="checkbox" id="channel12" checked /><label for="channel12"
          >Total Potencias</label
        >
      </div>
    </div>
  </body>
</html>